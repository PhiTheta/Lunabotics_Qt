// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SteeringModeType.proto

#ifndef PROTOBUF_SteeringModeType_2eproto__INCLUDED
#define PROTOBUF_SteeringModeType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace lunabotics {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SteeringModeType_2eproto();
void protobuf_AssignDesc_SteeringModeType_2eproto();
void protobuf_ShutdownFile_SteeringModeType_2eproto();


enum SteeringModeType {
  ACKERMANN = 1,
  POINT_TURN = 2,
  AUTO = 3
};
bool SteeringModeType_IsValid(int value);
const SteeringModeType SteeringModeType_MIN = ACKERMANN;
const SteeringModeType SteeringModeType_MAX = AUTO;
const int SteeringModeType_ARRAYSIZE = SteeringModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SteeringModeType_descriptor();
inline const ::std::string& SteeringModeType_Name(SteeringModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SteeringModeType_descriptor(), value);
}
inline bool SteeringModeType_Parse(
    const ::std::string& name, SteeringModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SteeringModeType>(
    SteeringModeType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace lunabotics

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::lunabotics::proto::SteeringModeType>() {
  return ::lunabotics::proto::SteeringModeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SteeringModeType_2eproto__INCLUDED
